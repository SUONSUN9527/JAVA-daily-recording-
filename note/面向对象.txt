类
1、定义
public class 类名 {
	1、成员变量（代表属性，一般是名词）
	2、成员方法（代表行为，一般是动词）
	3、构造器
	4、代码块
	5、内部类
   }

eg:
public class Phone {

	//属性（成员变量）
	String brand;（手机品牌）
	double price;（手机价格）

	//行为（方法）
	public void call ( ) {
		println（）；
	}
	public void playGame ( ) {
		println（）；
	}
   }

2、访问（使用对象）
①访问属性：对象名.成员变量          （类似C语言结构体的访问）
②访问行为：对象名.方法名（........）（类似C语言结构体的访问）
实质上，对象是另一个文件（类似于头文件引用其他文件），在本文件中用变量名承接后，用以上方法来访问。


Javabean类
1、定义
描述一类事物的类，是不写main方法的。
而编写main方法的类叫做测试类，可以在测试类中创建javabean类的对象并进行赋值调用。
实际上，就是在main中调用的普适类，在main中创建该类的对象进行赋值调用。

2、注意事项
①类名首字母大写，驼峰命名
②一个java文件可以定义多个类，但只有一个类是public修饰，而且public修饰的类名必须成为代码文件名
   实际开发中一个文件定义一个class类
③成员变量完整定义格式：修饰符 数据类型 变量名 = 初始化值（一般无需赋初始值，有默认值）；



封装
1、定义
①对象代表什么，就要封装对应的数据，并提供数据对应的行为。 

2、private关键字（可以解决数据安全问题）
①权限修饰符
②可以修饰成员（变量和方法）
③被private修饰的成员只能在本类中才能访问
eg：
public class GirlFriend{
        private String name；
        private int age；
        private String gengder；
   }
这样用private修饰了变量后无法在外部进行修改。
但是这样的话，就无法直接在外部对对象进行修改了，不符合面向对象的初衷。
因此：要定义set和get方法
我们在内部定义一个新的方法set用于判断赋值的合法性，调用该方法判断，合法再在类内部对private对象进行修改。
访问变量也定义一个新的方法get，用于访问变量的值。（对外提供属性值，一般无需参数但是有返回值）
public class GirlFriend{

        private int age；

        //set（赋值）
        public void setAge（int a）{
             if（a>=18 && a<=50）{
                   age = a;
             }else{
                   System.out.println("非法数据")；
             }
         }

        //get (获取）
        public int getAge ( ){
              return age;
        }
   }

3、this关键字

public class GirlFriend{
        private int age；
        public void method（）{
        	int age = 10；
 	System.out.println（this.age）；
        }
  }

如果不加this则会按照就近原则使用局部变量的age。



构造方法（就叫构造方法而不是普通方法）普通方法可以有返回值
1、格式
public class Student { 
         修饰符 类名 （参数） {
         	方法体；
         }
}

2、注意点：
①方法名和类名一定一致，包括大小写
②没有返回值类型，包括void
③无具体返回值（不能由return带回结果数据）
④创建对象时虚拟机来调用方法，每次创建对象都会调用一次方法，且不能手动调用。
⑤有参无参构造方法，都要有
⑥任何类定义后，都会自动定义无参数构造方法，但若写了有参数的构造方法，那么编译器就不会
   再自动定义一个无参数构造方法。此时若是没有传入参数，并调用方法就会报错。

3、两种方法
①无参构造方法：初始化对象时，成员变量数据均采用默认值
②有参构造方法：初始化对象时，可以直接为对象变量进行赋值


Javabean标准构造方法
①类名要直接，驼峰命名
②成员变量使用private修饰而不是public（保证安全性）
③提供至少两个构造方法：无参构造方法和有参构造方法
④成员方法：每一个成员变量都要提供对应的setxxx和getxxx方法（因为是private不能直接赋值访问）




内存图
1、一个对象内存图
①加载class文件（方法区）
②申明局部变量（方法区）
③在堆内存中开辟空间
④默认初始化（堆空间）
⑤显示初始化（堆空间）
⑥构造方法初始化（堆空间）
⑦将堆内存中的地址值赋值给左边的局部变量（栈空间的main函数）

2、两个对象的内存图
两个对象如果使用的是同一个类，则在方法区不需要再次声明（第一个对象建立时已经声明过了）
只要使用了new关键字，就会在堆中开辟新的空间。没使用则并没有开辟新的空间。

3、this关键字内存图
this代表的是调用成员方法的调用者，因此this关键字修饰的变量，指向的是调用者的对应变量。

4、成员变量：类中方法外的变量，且存在于堆内存中。生命周期依赖于对象，创建对象后即存在，对象消失则也消失。在整个类中有效
5、局部变量：方法内的变量，存在于栈内存中。生命周期依赖于方法的调用，方法调用则存在，方法运行结束则消失。只在当前方法中有效



输出的几种格式
1、System.out.println ( ) 打印后换行
2、System.out.print ( )    打印后不换行
3、System.out.printf ( “aaa%s”，“bbb”)则是用第二个参数填入%s的位置。可以有多个%s后面的参数数量 也要对应，从前到后填入。  



键盘录入
1、定义 
Scanner sc = new Scanner（system.in）

2、第一套体系
①nextInt ( );    用于接收整数
②nextDouble ( );  用于接收小数
③next ( );        用于接收字符串
这里的接收，遇到 空格/制表符/回车 就会停止接收。空格后面的数据则会作为第二个输入。

3、第二套体系
nextLine ( );     用于接收字符串
可以接收 空格/制表符 遇到回车才会停止。

键盘录入的两套体系决不能混用，混用则可能导致nextLine无法接收数据。










